# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build for Linux

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: 'true'

    - name: Install dependencies
      run: sudo apt update && sudo apt install -y git-lfs ninja-build libglfw3-dev g++ build-essential libwayland-dev xorg-dev libxkbcommon-dev wayland-protocols extra-cmake-modules

    - name: Run Makefile
      run: |
        make release
        mv build/LearnOpenGL LearnOpenGL

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: opengl-build-artifacts
        path: |
          LearnOpenGL
          textures/
          shaders/
        overwrite: true

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C ${{env.BUILD_TYPE}}
